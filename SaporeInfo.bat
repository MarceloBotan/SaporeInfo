::Este programa esta destinado a inventariar as máquinas da Sapore
::Em  desenvolvimento e testes pela equipe da TI Sede

::Coleta as informações da máquina e grava em um arquivo .txt
powershell "Start-Transcript -Path "C:\path_to_save_txt\txt.txt";$osInfo = Get-CimInstance Win32_OperatingSystem;Write-Host "hostname:$($osInfo.CSName)";Write-Host "os:$($osInfo.Caption)";$os = Get-WmiObject -Class Win32_OperatingSystem;$dateInstall = $os.InstallDate;$cleanedDateInstall = $dateInstall -split '\.';Write-Host "date_install:$($cleanedDateInstall[0])";Write-Host "architecture:$($osInfo.OSArchitecture)";$type_computer = Get-WmiObject Win32_ComputerSystem | Select-Object PCSystemType;if ($type_computer.PCSystemType -eq 2) {$type_computer_name = 'N';} elseif ($_.PCSystemType -eq 3) {$type_computer_name = 'D';};Write-Host "type_computer:$type_computer_name";$computer = Get-WmiObject -Class Win32_ComputerSystem;Write-Host "manufacturer:$($computer.Manufacturer)";Write-Host "model:$($computer.Model)";$serialNumber = Get-Ciminstance -classname win32_bios;Write-Host "serialnumber:$($serialNumber.SerialNumber)";$processor = Get-CimInstance Win32_Processor;Write-Host "processor:$($processor.Name)";$memory = Get-CimInstance Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum;Write-Host "ram:$([math]::Round($memory.Sum / 1GB, 2))";$disk = Get-PhysicalDisk | Select-Object MediaType, Size;Write-Host "disk_type:$($disk.MediaType)";Write-Host "disk_size:$([math]::Round($disk[0].Size / 1GB))";$office = $false;if (Get-Package -Name '*Office*') {$office = $true;};Write-Host "office:$office";$kms = $false;if (Get-Package | Where-Object {$_.Name -like '*KMS*' -and $_.Name -notlike '*MSI*'}) {$kms = $true;};Write-Host "kms:$kms";$impressoras = Get-WmiObject -Class Win32_Printer | Where-Object { $_.Name -notlike '*Microsoft*' -and $_.Name -notlike '*Adobe*' -and $_.Name -notlike '*OneNote*' -and $_.Name -notlike '*pdf*' -and $_.Name -notlike '*Fax*'};if ($impressoras) {$printer_name = $impressoras[0].Name;$printer_driver = $impressoras[0].DriverName;};Write-Host "printer_name:$printer_name";Write-Host "printer_driver:$printer_driver";$antivirus_status = $false;$antivirus = Get-WmiObject -Namespace "root\SecurityCenter2" -Class AntiVirusProduct | Select-Object DisplayName, ProductState;$antivirus | ForEach-Object {if (-not $antivirus_status -and $_.ProductState -eq 262144){$antivirus_status = $true;};};if (Get-Package -Name '*Sentinel*') {$antivirus_status = $true;};Write-Host "antivirus:$antivirus_status";$ip_local = (Test-Connection -ComputerName (hostname) -Count 1).IPV4Address.IPAddressToString;Write-Host "ip:$ip_local";$ip = (Invoke-WebRequest -Uri "https://api.ipify.org" -UseBasicParsing).Content;$json = Invoke-RestMethod -Uri "https://ipapi.co/$ip/json/";Write-Host "region:$($json.region)";Stop-Transcript"
